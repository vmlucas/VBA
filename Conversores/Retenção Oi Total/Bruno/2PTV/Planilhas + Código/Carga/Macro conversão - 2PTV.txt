'Enum
Public Enum ErrorType
    xlEtInfo
    xlEtWarning
    xlEtError
End Enum

'Colunas para a planilha original
Dim ESTRATEGIA_COL As Integer
Dim CAMPANHA_COL As Integer
Dim RESUMO_COL As Integer
Dim PLANO_OFERTA_COL As Integer
Dim OFERTA_COL As Integer
Dim PRECO_FX_COL As Integer
Dim PRECO_SVA_COL As Integer
Dim VAL_MULTA_COL As Integer
Dim FIDELIDADE_COL As Integer
Dim MESES_FIDELIDADE_COL As Integer
Dim BENEFICIO_TIPO_COL As Integer
Dim LAST_PROD_COL As Integer
Dim FIRST_PROD_COL As Integer
Dim MULTA_COL As Integer

'Colunas para a coluna a ser criada
Dim PLANO_FIXO_COL As Integer
Dim PRE_SEL_CONT_ONLINE_COL As Integer
Dim PRECO_TARGT_OFR_COL As Integer
Dim FRANQUIA_VCLD_COL As Integer
Dim ALAVANCA_COL As Integer
Dim PRECO_TOTAL_COL As Integer
Dim PRECO_MVL_VOZ_COL As Integer
Dim PRECO_MVL_DADOS_COL As Integer
Dim PRECO_FIXO_FID_COL As Integer
Dim PRECO_PLANO_FID_COL As Integer
Dim PRECO_LD_CFIDEL_COL As Integer
Dim PRECO_VC_CFIDEL_COL As Integer
Dim PRECO_VX_SSVA_COL As Integer
Dim PRECO_VX_CSVA_COL As Integer
Dim PRECO_VX_SVA_FID_COL As Integer
Dim CAMPANHA_VOZ_SLD_SVC_FIDEL_COL As Integer
Dim CAMPANHA_VOZ_SLD_CVC_FIDEL_COL As Integer
Dim CAMPANHA_VOZ_CLD_SVC_FIDEL_COL As Integer
Dim CAMPANHA_VOZ_CLD_CVC_FIDEL_COL As Integer
Dim OFERTA_VOZ_SLD_SVC_FIDEL_COL As Integer
Dim OFERTA_VOZ_SLD_CVC_FIDEL_COL As Integer
Dim OFERTA_VOZ_CLD_SVC_FIDEL_COL As Integer
Dim OFERTA_VOZ_CLD_CVC_FIDEL_COL As Integer
Dim BUNDLE_OFERTA_COL As Integer
Dim MIN_VC_OFERTA_COL As Integer
Dim MIN_LD_OFERTA_COL As Integer
Dim MULTA_FID_COL As Integer
Dim OPCAO_SVA_COL As Integer
Dim OPCAO_SD_COL As Integer
Dim TIPO_PRECO_COL As Integer
Dim MESES_FIDEL_COL As Integer
Dim VELOC_VX_COL As Integer
Dim PACK_TV_COL As Integer
Dim PLANO_TV_DVR As Integer
Dim OFERTA_DVR_COL As Integer

'linhas iniciais de processamento
Dim INI_LINE_PROD As Integer
Dim INI_LINE_RES As Integer
Dim END_COL_RES As Integer
Dim KEY_COL As Integer

'Valores de origem de planilha
Dim AQUISICAO_DEFAULT As String
Dim MIGRACAO_DEFAULT As String
Dim RETENCAO_DEFAULT As String

'Planilha de tratamento de erro
Dim ERROR_WORKSHEET As String
Dim COM_FIDEL_WKS As String
Dim SEM_FIDEL_WKS As String
Dim ERROR_LINE_COL As String
Dim ERROR_MSG_COL As String
Dim ErrorLine As Long

Dim LastColumn As Long
Dim LineColumn As Long
Dim ErrorColumn As Long

'Mensagens de erro
Dim BENEFICIO_NFOUND_ERROR As String
Dim COMB_BENEFICIO_ERROR As String
Dim SPEED_FMT_ERROR As String
Dim FIDEL_ERROR As String
Dim TV_PACK_ERROR As String
Dim ESTRATEGIA_ERROR As String

'Constantes de cor
Dim Red As Long
Dim Yellow As Long
Dim Orange As Long
'Colunas de ordenação
'Dim sortColumns As Variant

Sub Initialize_Cols()
    ESTRATEGIA_COL = 2
    CAMPANHA_COL = 39
    RESUMO_COL = 55
    'PLANO_OFERTA_COL = 55
    OFERTA_COL = 54
    PRECO_FX_COL = 57
    'PRECO_SVA_COL = 125
    VAL_MULTA_COL = 151
    FIDELIDADE_COL = 153
    MESES_FIDELIDADE_COL = 152
    BENEFICIO_TIPO_COL = 156
    LAST_PROD_COL = 111
    FIRST_PROD_COL = 60
    MULTA_COL = 149
    
    PLANO_FIXO_COL = 3
    PRECO_TARGT_OFR_COL = 4
    PRE_SEL_CONT_ONLINE_COL = 12
    FRANQUIA_VCLD_COL = 13
    ALAVANCA_COL = 14
    PRECO_TOTAL_COL = 16
    PRECO_MVL_VOZ_COL = 17
    PRECO_MVL_DADOS_COL = 18
    PRECO_FIXO_FID_COL = 19
    PRECO_LD_CFIDEL_COL = 20
    PRECO_VC_CFIDEL_COL = 21
    PRECO_PLANO_FID_COL = 22
    PRECO_VX_SSVA_COL = 23
    PRECO_VX_CSVA_COL = 24
    PRECO_VX_SVA_FID_COL = 25
    CAMPANHA_VOZ_SLD_SVC_FIDEL_COL = 30
    CAMPANHA_VOZ_SLD_CVC_FIDEL_COL = 31
    CAMPANHA_VOZ_CLD_SVC_FIDEL_COL = 32
    CAMPANHA_VOZ_CLD_CVC_FIDEL_COL = 33
    OFERTA_VOZ_SLD_SVC_FIDEL_COL = 34
    OFERTA_VOZ_SLD_CVC_FIDEL_COL = 35
    OFERTA_VOZ_CLD_SVC_FIDEL_COL = 36
    OFERTA_VOZ_CLD_CVC_FIDEL_COL = 37
    BUNDLE_OFERTA_COL = 38
    MIN_VC_OFERTA_COL = 39
    MIN_LD_OFERTA_COL = 40
    MULTA_FID_COL = 41
    OPCAO_SVA_COL = 42
    OPCAO_SD_COL = 43
    OFERTA_DVR_COL = 44
    TIPO_PRECO_COL = 46
    MESES_FIDEL_COL = 48
    VELOC_VX_COL = 11
    PACK_TV_COL = 8
    PLANO_TV_DVR = 7
    
    INI_LINE_PROD = 3
    INI_LINE_RES = 5
    END_COL_RES = 48
    KEY_COL = END_COL_RES + 1
    
    ERROR_WORKSHEET = "Erro"
    COM_FIDEL_WKS = "2PTV Com Fidelidade"
    SEM_FIDEL_WKS = "2PTV Sem Fidelidade"
    ERROR_LINE_COL = "Linha"
    ERROR_MSG_COL = "Mensagem de Erro"
    ErrorLine = 3
    
    BENEFICIO_NFOUND_ERROR = "Tipo de Benefício não encontrado"
    COMB_BENEFICIO_ERROR = "Combinação de Tipo de Benefício não prevista"
    SPEED_FMT_ERROR = "Formato ou valor de velocidade não previsto"
    FIDEL_ERROR = "Texto de fidelização não previsto"
    TV_PACK_ERROR = "Pacote de TV não previsto"
    ESTRATEGIA_ERROR = "Estratégia não prevista"
    
    AQUISICAO_DEFAULT = "Aquisicao"
    MIGRACAO_DEFAULT = "Migracao"
    RETENCAO_DEFAULT = "Retencao"

    Red = RGB(255, 0, 0)
    Yellow = RGB(255, 255, 0)
    Orange = RGB(255, 165, 0)
    
    If WorksheetExists(ERROR_WORKSHEET) Then
        ThisWorkbook.Sheets(ERROR_WORKSHEET).Delete
    End If
End Sub

Sub InsereErro(ByVal errorOrigin As Excel.Worksheet, _
               ByVal insertPoint As Excel.Worksheet, _
               Row As Long, _
               Optional column As Long, _
               Optional errorMessage As String, _
               Optional typeError As ErrorType = xlEtError)
    Dim xlWb As Excel.Worksheet
    Dim xlWbAfter As Excel.Worksheet
    
    If insertPoint Is Nothing Then
        Set xlWbAfter = ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count)
    Else
        Set xlWbAfter = insertPoint
    End If
    
    If Not WorksheetExists(ERROR_WORKSHEET) Then
        Set xlWb = ThisWorkbook.Sheets.Add(After:=xlWbAfter)
        xlWb.Name = ERROR_WORKSHEET
        With errorOrigin
            .Range(.Cells(1, 1), .Cells(2, 1)).EntireRow.Copy Destination:=xlWb.Cells(1, 1)
            LastColumn = .Cells(2, .Columns.Count).End(xlToLeft).column
        End With
        
        LineColumn = LastColumn + 1
        ErrorColumn = LineColumn + 1
        
        With xlWb
            .Range(.Cells(1, LastColumn), .Cells(2, LastColumn)).Copy
            .Range(.Cells(1, LineColumn), .Cells(2, ErrorColumn)).PasteSpecial xlPasteFormats
            .Cells(2, LineColumn).Value = ERROR_LINE_COL
            .Cells(2, ErrorColumn).Value = ERROR_MSG_COL
        End With
    Else
        Set xlWb = ThisWorkbook.Sheets(ERROR_WORKSHEET)
    End If

    With errorOrigin
        .Range(.Cells(Row, 1), .Cells(Row, LastColumn)).EntireRow.Copy Destination:=xlWb.Cells(ErrorLine, 1)
        .Activate
        If (Not IsEmpty(column)) And (column > 0) Then
            .Range(.Cells(Row, column), .Cells(Row, column)).Select
        Else
            .Range(.Cells(Row, 1), .Cells(Row, LastColumn)).EntireRow.Select
        End If

        If typeError = xlEtError Then
            Selection.Font.Bold = True
            Selection.Font.Color = Red
        ElseIf typeError = xlEtWarning Then
            Selection.Font.Italic = True
            Selection.Font.Color = Orange
        End If
    End With

    With xlWb
        If typeError = xlEtError Then
            .Cells(ErrorLine, LineColumn).Value = "Erro: "
        ElseIf typeError = xlEtWarning Then
            .Cells(ErrorLine, LineColumn).Value = "Alerta: "
        ElseIf typeError = xlEtInfo Then
            .Cells(ErrorLine, LineColumn).Value = "Info: "
        End If
        
        .Cells(ErrorLine, LineColumn).Value = .Cells(ErrorLine, LineColumn).Value & "Linha " & Row
        If (Not IsEmpty(column)) And (column > 0) Then
            .Cells(ErrorLine, LineColumn).Value = .Cells(ErrorLine, LineColumn).Value & ", Coluna: " & column
        End If
        .Cells(ErrorLine, ErrorColumn).Value = errorMessage
    End With
    
    ErrorLine = ErrorLine + 1
End Sub

Sub Conversor(ByVal prodWrkBook As Excel.Workbook)
    Dim estrategia As String
    Dim campanha As String
    Dim plano As String
    Dim oferta As String
    Dim resumo As String
    Dim beneficio As String
    Dim haMulta As String
    Dim precoFX As Double
    Dim precoTV As Double
    Dim precoSVA As Double
    Dim precoTotal As Double
    Dim multa As Double
    Dim mesesFidel As Integer
    Dim naFound As Integer
    Dim ldvc As String
    Dim isLD As Boolean
    Dim isVC As Boolean
    Dim isNA As Boolean
    Dim isSVA As Boolean
    Dim isSD As Boolean
    Dim isFidel As Boolean
    
    Dim Row As Long
    Dim rowUFid As Long
    Dim rowUSFid As Long
    Dim i As Long
    Dim ind As Integer
    
    Dim TVVerified() As Boolean
    
    Dim thisApp As Excel.Application
    Dim dataSheet As Excel.Worksheet
    Dim updateSheet As Excel.Worksheet
    Dim fidelSheet As Excel.Worksheet
    Dim semFidelSheet As Excel.Worksheet
    
    Dim newSheet As Excel.Worksheet
    Dim errorSheet As Excel.Worksheet
    
    Dim rnSource As Excel.Range
    Dim rnTarget As Excel.Range

    Initialize_Cols

    Set thisApp = prodWrkBook.Parent
    
    Set dataSheet = prodWrkBook.Sheets("Briefing_FID")
    Set fidelSheet = ThisWorkbook.Sheets(COM_FIDEL_WKS)
    Set semFidelSheet = ThisWorkbook.Sheets(SEM_FIDEL_WKS)
    Clean fidelSheet
    Clean semFidelSheet

    rowUFid = INI_LINE_RES
    rowUSFid = INI_LINE_RES
    Row = INI_LINE_PROD
    
    ReDim TVVerified((LAST_PROD_COL - FIRST_PROD_COL) / 3) As Boolean
   
    For ind = LBound(TVVerified) To UBound(TVVerified)
        TVVerified(ind) = False
    Next ind

    Do While Not (IsEmpty(dataSheet.Cells(Row, CAMPANHA_COL).Value))
        'busca os novos dados
        estrategia = dataSheet.Cells(Row, ESTRATEGIA_COL).Value
        campanha = dataSheet.Cells(Row, CAMPANHA_COL).Value
        resumo = dataSheet.Cells(Row, RESUMO_COL).Value
        'plano = dataSheet.Cells(Row, PLANO_OFERTA_COL).Value
        oferta = dataSheet.Cells(Row, OFERTA_COL).Value
        precoFX = dataSheet.Cells(Row, PRECO_FX_COL).Value
        multa = dataSheet.Cells(Row, VAL_MULTA_COL).Value
        haMulta = dataSheet.Cells(Row, MULTA_COL).Value
        mesesFidel = dataSheet.Cells(Row, MESES_FIDELIDADE_COL).Value
        beneficio = dataSheet.Cells(Row, FIDELIDADE_COL).Value
         
        precoSVA = 0
        isSVA = True
         
        If LCase(haMulta) = "sim" Then
            isFidel = True
        Else
            isFidel = False
        End If
        
        If isFidel Then
            Set updateSheet = fidelSheet
            rowU = rowUFid
        Else
            Set updateSheet = semFidelSheet
            rowU = rowUSFid
        End If
         
        If (InStr(LCase(estrategia), "migração") > 0 Or InStr(LCase(estrategia), "migracao") > 0) Then
            estrategia = MIGRACAO_DEFAULT
        ElseIf (InStr(LCase(estrategia), "aquisição") > 0 Or InStr(LCase(estrategia1), "aquisicao") > 0) Then
            estrategia = AQUISICAO_DEFAULT
        ElseIf (InStr(LCase(estrategia), "retenção") > 0 Or InStr(LCase(estrategia), "retencao") > 0) Then
            estrategia = RETENCAO_DEFAULT
        Else
            InsereErro dataSheet, updateSheet, Row, errorMessage:=ESTRATEGIA_ERROR
            GoTo ContinueReadLoop
        End If
         
        ldvc = dataSheet.Cells(Row, BENEFICIO_TIPO_COL).Value
        isLD = False
        isVC = False
        isNA = False
        naFound = InStr(UCase(ldvc), "NA") + InStr(UCase(ldvc), "N/A")
        ldFound = InStr(UCase(ldvc), "LD")
        vcFound = InStr(UCase(ldvc), "VC")
         
        If naFound > 0 Then
            isNA = True
        End If
         
        If ldFound > 0 Then
            isLD = True
        End If
         
        If vcFound > 0 Then
            isVC = True
        End If
         
        If isLD And isVC Then
            ldvc = """" & "VC LD Ilimitado" & """"
        ElseIf isLD And (Not isVC) Then
            ldvc = """" & "LD Ilimitado" & """"
        ElseIf (Not isLD) And isVC Then
            ldvc = """" & "VC Ilimitado" & """"
        ElseIf isNA Or ((Not isLD) And (Not isVC)) Then
            ldvc = """" & "Sem Ilimitado" & """"
        Else
            InsereErro dataSheet, updateSheet, Row, errorMessage:=COMB_BENEFICIO_ERROR
            ldvc = Empty
            GoTo ContinueReadLoop
        End If
         
        isSD = True
         
        i = FIRST_PROD_COL
        Do While i < LAST_PROD_COL
            pacoteTVTemp = dataSheet.Cells(1, i).Value
            precoTV = dataSheet.Cells(Row, i).Value
            
            If Not IsEmpty(precoTV) And precoTV <> 0 Then
                'de-para pacote TV
                If InStr(LCase(pacoteTVTemp), "start hd") > 0 Then
                    pacoteTV = """" & "TV Start HD" & """"
                ElseIf InStr(LCase(pacoteTVTemp), "mix hd") > 0 Then
                    pacoteTV = """" & "TV Mix HD" & """"
                ElseIf InStr(LCase(pacoteTVTemp), "mix hbo hd") > 0 Or _
                       InStr(LCase(pacoteTVTemp), "mix hbo max hd") > 0 Or _
                       InStr(LCase(pacoteTVTemp), "mix hbomax hd") > 0 Then
                    pacoteTV = """" & "TV Mix HBOMAX HD" & """"
                ElseIf InStr(LCase(pacoteTVTemp), "mix telecine hd") > 0 Then
                    pacoteTV = """" & "TV Mix Telecine HD" & """"
                ElseIf InStr(LCase(pacoteTVTemp), "mix cinema hd") > 0 Then
                    pacoteTV = """" & "TV Mix Cinema HD" & """"
                ElseIf InStr(LCase(pacoteTVTemp), "total hbo hd") > 0 Or _
                       InStr(LCase(pacoteTVTemp), "total hbo max hd") > 0 Or _
                       InStr(LCase(pacoteTVTemp), "total hbomax hd") > 0 Then
                    pacoteTV = """" & "TV Total HBOMAX HD" & """"
                ElseIf InStr(LCase(pacoteTVTemp), "total cinema hd") > 0 Then
                    pacoteTV = """" & "TV Total Cinema HD" & """"
                ElseIf InStr(LCase(pacoteTVTemp), "total hd") > 0 Then
                    pacoteTV = """" & "TV Total HD" & """"
                ElseIf InStr(LCase(pacoteTVTemp), "total telecine hd") > 0 Then
                    pacoteTV = """" & "TV Total Telecine HD" & """"
                Else
                    pacoteTV = Empty
                    If Not TVVerified((LAST_PROD_COL - i) / 3) Then
                        TVVerified((LAST_PROD_COL - i) / 3) = True
                        InsereErro dataSheet, updateSheet, Row, column:=i, errorMessage:=TV_PACK_ERROR
                        GoTo ContinueReadLoop
                    End If
                End If
        
                'DVR
                If InStr(UCase(pacoteTVTemp), "DVR") > 0 Then
                    isDVR = True
                Else
                    isDVR = False
                End If
            
                updateSheet.Cells(rowU, PLANO_FIXO_COL).Value = """" & "Fixo Ilimitado" & """"
                updateSheet.Cells(rowU, PRECO_TARGT_OFR_COL).Value = 99999
                updateSheet.Cells(rowU, PRE_SEL_CONT_ONLINE_COL).Value = ""
                updateSheet.Cells(rowU, FRANQUIA_VCLD_COL).Value = ldvc
                updateSheet.Cells(rowU, ALAVANCA_COL).Value = """" & "RetencaoOT" & """"
                updateSheet.Cells(rowU, PRECO_TOTAL_COL).Value = (precoTV + precoFX)
                updateSheet.Cells(rowU, PRECO_MVL_VOZ_COL).Value = ""
                updateSheet.Cells(rowU, PRECO_MVL_DADOS_COL).Value = ""
                updateSheet.Cells(rowU, PRECO_FIXO_FID_COL).Value = precoFX
                updateSheet.Cells(rowU, PRECO_PLANO_FID_COL).Value = precoTV
                updateSheet.Cells(rowU, PRECO_LD_CFIDEL_COL).Value = 0
                updateSheet.Cells(rowU, PRECO_VC_CFIDEL_COL).Value = 5
                updateSheet.Cells(rowU, PRECO_VX_SSVA_COL).Value = ""
                updateSheet.Cells(rowU, PRECO_VX_CSVA_COL).Value = ""
                updateSheet.Cells(rowU, CAMPANHA_VOZ_SLD_SVC_FIDEL_COL).Value = ""
                updateSheet.Cells(rowU, CAMPANHA_VOZ_SLD_CVC_FIDEL_COL).Value = ""
                updateSheet.Cells(rowU, CAMPANHA_VOZ_CLD_SVC_FIDEL_COL).Value = ""
                updateSheet.Cells(rowU, CAMPANHA_VOZ_CLD_CVC_FIDEL_COL).Value = ""
                updateSheet.Cells(rowU, OFERTA_VOZ_SLD_SVC_FIDEL_COL).Value = ""
                updateSheet.Cells(rowU, OFERTA_VOZ_SLD_CVC_FIDEL_COL).Value = ""
                updateSheet.Cells(rowU, OFERTA_VOZ_CLD_SVC_FIDEL_COL).Value = ""
                updateSheet.Cells(rowU, OFERTA_VOZ_CLD_CVC_FIDEL_COL).Value = ""
                updateSheet.Cells(rowU, BUNDLE_OFERTA_COL).Value = """" & LCase(resumo) & """"
                updateSheet.Cells(rowU, OPCAO_SD_COL).Value = isSD
                updateSheet.Cells(rowU, TIPO_PRECO_COL).Value = """" & estrategia & """"
                
                If isFidel Then
                    updateSheet.Cells(rowU, MULTA_FID_COL).Value = multa
                    updateSheet.Cells(rowU, OPCAO_SVA_COL).Value = isSVA
                    updateSheet.Cells(rowU, MESES_FIDEL_COL).Value = mesesFidel
                    
                    If isSVA Then
                        updateSheet.Cells(rowU, PRECO_VX_SVA_FID_COL).Value = 0
                    Else
                        updateSheet.Cells(rowU, PRECO_VX_SVA_FID_COL).Value = precoSVA
                    End If
                End If
         
                If (Not isLD) And (Not isVC) Then
                    updateSheet.Cells(rowU, CAMPANHA_VOZ_SLD_SVC_FIDEL_COL).Value = campanha
                    updateSheet.Cells(rowU, OFERTA_VOZ_SLD_SVC_FIDEL_COL).Value = oferta
                    updateSheet.Cells(rowU, MIN_VC_OFERTA_COL).Value = 0
                    updateSheet.Cells(rowU, MIN_LD_OFERTA_COL).Value = 0
                End If
                
                If isLD And (Not isVC) Then
                    updateSheet.Cells(rowU, CAMPANHA_VOZ_CLD_SVC_FIDEL_COL).Value = campanha
                    updateSheet.Cells(rowU, OFERTA_VOZ_CLD_SVC_FIDEL_COL).Value = oferta
                    updateSheet.Cells(rowU, MIN_VC_OFERTA_COL).Value = 0
                    updateSheet.Cells(rowU, MIN_LD_OFERTA_COL).Value = 99999
                End If

                If (Not isLD) And isVC Then
                    updateSheet.Cells(rowU, CAMPANHA_VOZ_SLD_CVC_FIDEL_COL).Value = campanha
                    updateSheet.Cells(rowU, OFERTA_VOZ_SLD_CVC_FIDEL_COL).Value = oferta
                    updateSheet.Cells(rowU, MIN_VC_OFERTA_COL).Value = 99999
                    updateSheet.Cells(rowU, MIN_LD_OFERTA_COL).Value = 0
                End If
                
                If isLD And isVC Then
                    updateSheet.Cells(rowU, CAMPANHA_VOZ_CLD_CVC_FIDEL_COL).Value = campanha
                    updateSheet.Cells(rowU, OFERTA_VOZ_CLD_CVC_FIDEL_COL).Value = oferta
                    updateSheet.Cells(rowU, MIN_VC_OFERTA_COL).Value = 99999
                    updateSheet.Cells(rowU, MIN_LD_OFERTA_COL).Value = 99999
                End If
                
                updateSheet.Cells(rowU, PACK_TV_COL).Value = pacoteTV
                updateSheet.Cells(rowU, OFERTA_DVR_COL).Value = isDVR
                updateSheet.Cells(rowU, PLANO_TV_DVR).Value = isDVR
                
                updateSheet.Cells(rowU, KEY_COL).Value = updateSheet.Cells(rowU, VELOC_VX_COL).Value & _
                                                         updateSheet.Cells(rowU, PLANO_TV_DVR).Value & _
                                                         updateSheet.Cells(rowU, PACK_TV_COL).Value & _
                                                         updateSheet.Cells(rowU, PRE_SEL_CONT_ONLINE_COL).Value & _
                                                         updateSheet.Cells(rowU, FRANQUIA_VCLD_COL).Value & _
                                                         updateSheet.Cells(rowU, PLANO_FIXO_COL).Value & _
                                                         updateSheet.Cells(rowU, ALAVANCA_COL).Value
                
                'Duplicação de linha, segundo regra FranquiaVCLD
                With updateSheet
                    .Range(.Cells(rowU, 1), .Cells(rowU, KEY_COL)).EntireRow.Copy Destination:=.Cells(rowU + 1, 1)

                    'Sem Ilimitado -> LD ilimitado
                    If (Not isLD) And (Not isVC) Then
                        .Cells(rowU + 1, FRANQUIA_VCLD_COL).Value = """" & "LD Ilimitado" & """"
                        .Cells(rowU + 1, CAMPANHA_VOZ_SLD_SVC_FIDEL_COL).Value = Empty
                        .Cells(rowU + 1, OFERTA_VOZ_SLD_SVC_FIDEL_COL).Value = Empty
                        .Cells(rowU + 1, CAMPANHA_VOZ_CLD_SVC_FIDEL_COL).Value = campanha
                        .Cells(rowU + 1, OFERTA_VOZ_CLD_SVC_FIDEL_COL).Value = oferta
                        .Cells(rowU + 1, MIN_VC_OFERTA_COL).Value = 0
                        .Cells(rowU + 1, MIN_LD_OFERTA_COL).Value = 99999
                    End If

                    'LD Ilimitado -> Sem ilimitado
                    If isLD And (Not isVC) Then
                        .Cells(rowU + 1, FRANQUIA_VCLD_COL).Value = """" & "Sem Ilimitado" & """"
                        .Cells(rowU + 1, CAMPANHA_VOZ_CLD_SVC_FIDEL_COL).Value = Empty
                        .Cells(rowU + 1, OFERTA_VOZ_CLD_SVC_FIDEL_COL).Value = Empty
                        .Cells(rowU + 1, CAMPANHA_VOZ_SLD_SVC_FIDEL_COL).Value = campanha
                        .Cells(rowU + 1, OFERTA_VOZ_SLD_SVC_FIDEL_COL).Value = oferta
                        .Cells(rowU + 1, MIN_VC_OFERTA_COL).Value = 0
                        .Cells(rowU + 1, MIN_LD_OFERTA_COL).Value = 0
                    End If

                    'VC Ilimitado -> VC LD Ilimitado
                    If (Not isLD) And isVC Then
                        .Cells(rowU + 1, FRANQUIA_VCLD_COL).Value = """" & "VC LD Ilimitado" & """"
                        .Cells(rowU + 1, CAMPANHA_VOZ_SLD_CVC_FIDEL_COL).Value = Empty
                        .Cells(rowU + 1, OFERTA_VOZ_SLD_CVC_FIDEL_COL).Value = Empty
                        .Cells(rowU + 1, CAMPANHA_VOZ_CLD_CVC_FIDEL_COL).Value = campanha
                        .Cells(rowU + 1, OFERTA_VOZ_CLD_CVC_FIDEL_COL).Value = oferta
                        .Cells(rowU + 1, MIN_VC_OFERTA_COL).Value = 99999
                        .Cells(rowU + 1, MIN_LD_OFERTA_COL).Value = 99999
                    End If
                
                    'VC LD Ilimitado -> VC Ilimitado
                    If isLD And isVC Then
                        .Cells(rowU + 1, FRANQUIA_VCLD_COL).Value = """" & "VC Ilimitado" & """"
                        .Cells(rowU + 1, CAMPANHA_VOZ_CLD_CVC_FIDEL_COL).Value = Empty
                        .Cells(rowU + 1, OFERTA_VOZ_CLD_CVC_FIDEL_COL).Value = Empty
                        .Cells(rowU + 1, CAMPANHA_VOZ_SLD_CVC_FIDEL_COL).Value = campanha
                        .Cells(rowU + 1, OFERTA_VOZ_SLD_CVC_FIDEL_COL).Value = oferta
                        .Cells(rowU + 1, MIN_VC_OFERTA_COL).Value = 99999
                        .Cells(rowU + 1, MIN_LD_OFERTA_COL).Value = 0
                    End If
                
                    .Cells(rowU + 1, KEY_COL).Value = .Cells(rowU + 1, VELOC_VX_COL).Value & _
                                                      .Cells(rowU + 1, PLANO_TV_DVR).Value & _
                                                      .Cells(rowU + 1, PACK_TV_COL).Value & _
                                                      .Cells(rowU + 1, PRE_SEL_CONT_ONLINE_COL).Value & _
                                                      .Cells(rowU + 1, FRANQUIA_VCLD_COL).Value & _
                                                      .Cells(rowU + 1, PLANO_FIXO_COL).Value & _
                                                      .Cells(rowU + 1, ALAVANCA_COL).Value
                End With
                'rowU = rowU + 1
                rowU = rowU + 2
            End If
            
            'Cada produto possui 3 colunas padronizadas na planilha original:
            'Comercial (preço), % Desc e Código
            i = i + 3
         Loop

         If isFidel Then
            rowUFid = rowU
         Else
            rowUSFid = rowU
         End If
         
ContinueReadLoop:
         
         Row = Row + 1
    Loop
    
    'Remove duplicidade do resultado final
    With updateSheet
        'Concatenação da chave, porque RemoveDuplicates só permite Arrays limitados ao sort da planilha.
        Set rnSource = .Range(.Cells(INI_LINE_RES, 1), .Cells(rowU - 1, KEY_COL))
        rnSource.Sort key1:=.Range(.Cells(INI_LINE_RES, KEY_COL), .Cells(rowU - 1, KEY_COL)), _
                      key2:=.Range(.Cells(INI_LINE_RES, PRECO_TOTAL_COL), .Cells(rowU - 1, PRECO_TOTAL_COL))
        rnSource.RemoveDuplicates Columns:=Array(KEY_COL, PRECO_TOTAL_COL), Header:=xlNo
        .Columns(KEY_COL).EntireColumn.Hidden = True
    End With
    
    'WrkBookAvg fidelSheet
    'WrkBookAvg semFidelSheet
End Sub

Private Sub Clean(Optional xlSheet As Excel.Worksheet)
    Dim rowI As Long
    Dim rowL As Long
    
    Dim dataSheet As Excel.Worksheet
    
    If xlSheet Is Nothing Then
        Set dataSheet = ThisWorkbook.Sheets(1)
    ElseIf WorksheetExists(xlSheet.Name) Then
        Set dataSheet = xlSheet
    Else
        Set dataSheet = ThisWorkbook.Sheets(1)
    End If
    
    With dataSheet
        rowI = INI_LINE_RES
        rowL = .Cells(.Rows.Count, PLANO_FIXO_COL).End(xlUp).Row

        If rowI <= rowL Then
            .Range(.Cells(rowI, 1), .Cells(rowL + 1, KEY_COL)).ClearContents
        End If
    End With
End Sub

Private Sub WrkBookAvg(Optional xlSheet As Excel.Worksheet)
    Dim Row As Long
    
    Dim dataSheet As Excel.Worksheet
    
    If xlSheet Is Nothing Then
        Set dataSheet = ThisWorkbook.Sheets(COM_FIDEL_WKS)
    ElseIf WorksheetExists(xlSheet.Name) Then
        Set dataSheet = xlSheet
    Else
        Set dataSheet = ThisWorkbook.Sheets(1)
    End If
    
    Row = INI_LINE_RES

    Do While Not (IsEmpty(dataSheet.Cells(Row, KEY_COL).Value))
        If dataSheet.Cells(Row, KEY_COL).Value = dataSheet.Cells(Row + 1, KEY_COL).Value Then
            dataSheet.Cells(Row, PRECO_TARGT_OFR_COL).Value = _
            (dataSheet.Cells(Row, PRECO_TOTAL_COL).Value + _
             dataSheet.Cells(Row + 1, PRECO_TOTAL_COL).Value) / 2
        End If

        Row = Row + 1
    Loop
End Sub

Sub BtnImport_Click()
    Dim strFileToOpen As String
    Dim newFile As String
    Dim currentFile As String
    
    Dim actBook As Excel.Workbook
    Dim prodWrkBook As Excel.Workbook
    Dim fidelWrkBook As Excel.Workbook
    Dim semFidelWrkBook As Excel.Workbook
    Dim errorWrkBook As Excel.Workbook
    
    Dim rowLCFidel As Long
    Dim rowLSFidel As Long

    Application.ScreenUpdating = False
    
    currentFile = ThisWorkbook.FullName
    
    strFileToOpen = Application.GetOpenFilename(Title:="Please choose a file to open", _
                                                fileFilter:="Excel Files *.xls* (*.xls*),")

    If strFileToOpen = "False" Or strFileToOpen = "" Then
        MsgBox "No file selected.", vbExclamation, "Sorry!"
        Exit Sub
    End If
        
    Set prodWrkBook = Workbooks.Open(Filename:=strFileToOpen)
    
    Conversor prodWrkBook
    
    'Verifica se arquivo Com Fidelidade está vazio
    If WorksheetExists(COM_FIDEL_WKS) Then
        With ThisWorkbook.Sheets(COM_FIDEL_WKS)
            rowLCFidel = .Cells(.Rows.Count, PLANO_FIXO_COL).End(xlUp).Row
        End With
    End If
    
    If rowLCFidel >= INI_LINE_RES Then
        newFile = Application.GetSaveAsFilename(InitialFileName:=NewFileName, _
                                                fileFilter:="Excel Files *.xls* (*.xls*),", _
                                                Title:="Save As - Com Fidelidade")
    Else
        newFile = ""
    End If
                                            
    If newFile <> "" And newFile <> "False" Then
        If InStr(LCase(newFile), ".xls") <= 0 Then
            newFile = Trim(newFile) & "xlsx"
        End If
        If InStr(LCase(newFile), ".") <= 0 Then
            newFile = Trim(newFile) & ".xlsx"
        End If

        ThisWorkbook.Sheets(COM_FIDEL_WKS).Copy
        Set fidelWrkBook = ActiveWorkbook
        With fidelWrkBook.Sheets(1)
            .Buttons.Delete
            .Range(.Cells(1, 1), .Cells(2, 1)).EntireRow.Delete
        End With

        If WorksheetExists(ERROR_WORKSHEET) Then
            ThisWorkbook.Sheets(ERROR_WORKSHEET).Copy After:=fidelWrkBook.Sheets(fidelWrkBook.Sheets.Count)
        End If

        fidelWrkBook.SaveAs Filename:=newFile, _
                            FileFormat:=xlOpenXMLWorkbook, _
                            CreateBackup:=False
        
        fidelWrkBook.Close
    End If

    'Verifica se arquivo Sem Fidelidade está vazio
    If WorksheetExists(SEM_FIDEL_WKS) Then
        With ThisWorkbook.Sheets(SEM_FIDEL_WKS)
            rowLSFidel = .Cells(.Rows.Count, PLANO_FIXO_COL).End(xlUp).Row
        End With
    End If
    
    If rowLSFidel >= INI_LINE_RES Then
        newFile = Application.GetSaveAsFilename(InitialFileName:=NewFileName, _
                                                fileFilter:="Excel Files *.xls* (*.xls*),", _
                                                Title:="Save As - Sem Fidelidade")
    Else
        newFile = ""
    End If
  
    If newFile <> "" And newFile <> "False" Then
        If InStr(LCase(newFile), ".xls") <= 0 Then
            newFile = Trim(newFile) & "xlsx"
        End If
        If InStr(LCase(newFile), ".") <= 0 Then
            newFile = Trim(newFile) & ".xlsx"
        End If

        ThisWorkbook.Sheets(SEM_FIDEL_WKS).Copy
        Set semFidelWrkBook = ActiveWorkbook
        With semFidelWrkBook.Sheets(1)
            .Buttons.Delete
            .Range(.Cells(1, 1), .Cells(2, 1)).EntireRow.Delete
        End With

        If rowLCFidel < INI_LINE_RES And WorksheetExists(ERROR_WORKSHEET) Then
            ThisWorkbook.Sheets(ERROR_WORKSHEET).Copy After:=semFidelWrkBook.Sheets(semFidelWrkBook.Sheets.Count)
        End If
        
        semFidelWrkBook.SaveAs Filename:=newFile, _
                               FileFormat:=xlOpenXMLWorkbook, _
                               CreateBackup:=False

        semFidelWrkBook.Close
    End If

    If rowLCFidel < INI_LINE_RES And rowLSFidel < INI_LINE_RES And WorksheetExists(ERROR_WORKSHEET) Then
        newFile = Application.GetSaveAsFilename(InitialFileName:=NewFileName, _
                                                fileFilter:="Excel Files *.xls* (*.xls*),", _
                                                Title:="Save As - Erros processamento")
                                                
        If newFile <> "" And newFile <> "False" Then
            If InStr(LCase(newFile), ".xls") <= 0 Then
                newFile = Trim(newFile) & "xlsx"
            End If
            If InStr(LCase(newFile), ".") <= 0 Then
                newFile = Trim(newFile) & ".xlsx"
            End If

            ThisWorkbook.Sheets(ERROR_WORKSHEET).Copy
            Set errorWrkBook = ActiveWorkbook
            With errorWrkBook.Sheets(1)
                .Range(.Cells(1, 1), .Cells(2, 1)).EntireRow.Delete
                .SaveAs Filename:=newFile, _
                        FileFormat:=xlOpenXMLWorkbook, _
                        CreateBackup:=False
            End With
            errorWrkBook.Close
        End If
    End If
    
    Workbooks.Open currentFile
    prodWrkBook.Close
    
    Application.ScreenUpdating = True
End Sub

Function WorksheetExists(sheetName As String, Optional wb As Excel.Workbook)
    Dim s As Excel.Worksheet
    
    If wb Is Nothing Then Set wb = ThisWorkbook
    
    On Error Resume Next
    Set s = wb.Sheets(sheetName)
    If Err.Number > 0 Then
        WorksheetExists = False
    Else
        WorksheetExists = True
    End If
    On Error GoTo 0
End Function
