'Enum
Public Enum ErrorType
    xlEtInfo
    xlEtWarning
    xlEtError
End Enum

'Colunas para a planilha original
Dim ESTRATEGIA_COL As Integer
Dim CAMPANHA_COL As Integer
Dim RESUMO_COL As Integer
Dim PLANO_OFERTA_COL As Integer
Dim OFERTA_COL As Integer
Dim PRECO_FX_COL As Integer
Dim PRECO_TV_COL As Integer
Dim PRECO_SVA_COL As Integer
Dim PRECO_BL_COL As Integer
Dim PRECO_TOT_COL As Integer
Dim VAL_MULTA_COL As Integer
Dim FIDELIDADE_COL As Integer
Dim BENEFICIO_TIPO_COL As Integer
Dim ONLINE_CONT_COL As Integer
Dim PACOTE_TV_COL As Integer
Dim PLANO_TV_DVR_COL As Integer
Dim VELOC_BL_COL As Integer
Dim LD_COL As Integer
Dim VC_COL As Integer
Dim MULTA_COL As Integer

Dim LAST_PROD_COL As Integer
Dim FIRST_PROD_COL As Integer

'Colunas para a coluna a ser criada
Dim PLANO_FIXO_COL As Integer
Dim PRE_SEL_CONT_ONLINE_COL As Integer
Dim PRECO_TARGT_OFR_COL As Integer
Dim FRANQUIA_VCLD_COL As Integer
Dim ALAVANCA_COL As Integer
Dim PRECO_TOTAL_COL As Integer
Dim PRECO_MVL_VOZ_COL As Integer
Dim PRECO_MVL_DADOS_COL As Integer
Dim PRECO_FIXO_FID_COL As Integer
Dim PRECO_LD_CFIDEL_COL As Integer
Dim PRECO_VC_CFIDEL_COL As Integer
Dim PRECO_VX_SSVA_COL As Integer
Dim PRECO_VX_CSVA_COL As Integer
Dim PRECO_VX_SVA_FID_COL As Integer
Dim CAMPANHA_VOZ_SLD_SVC_FIDEL_COL As Integer
Dim CAMPANHA_VOZ_SLD_CVC_FIDEL_COL As Integer
Dim CAMPANHA_VOZ_CLD_SVC_FIDEL_COL As Integer
Dim CAMPANHA_VOZ_CLD_CVC_FIDEL_COL As Integer
Dim OFERTA_VOZ_SLD_SVC_FIDEL_COL As Integer
Dim OFERTA_VOZ_SLD_CVC_FIDEL_COL As Integer
Dim OFERTA_VOZ_CLD_SVC_FIDEL_COL As Integer
Dim OFERTA_VOZ_CLD_CVC_FIDEL_COL As Integer
Dim BUNDLE_OFERTA_COL As Integer
Dim MIN_VC_OFERTA_COL As Integer
Dim MIN_LD_OFERTA_COL As Integer
Dim MULTA_FID_COL As Integer
Dim OPCAO_SVA_COL As Integer
Dim OPCAO_SD_COL As Integer
Dim TIPO_PRECO_COL As Integer
Dim MESES_FIDEL_COL As Integer
Dim VELOC_VX_COL As Integer
Dim PACK_TV_COL As Integer
Dim OFERTA_DVR_COL As Integer
Dim PLANO_TV_DVR As Integer
Dim PRECO_TV_CFIDEL_COL As Integer
Dim SELECAO_CONT_ONLINE_COL As Integer

'linhas iniciais de processamento
Dim INI_LINE_PROD As Integer
Dim INI_LINE_RES As Integer
Dim END_COL_RES As Integer
Dim KEY_COL As Integer

'Planilha de tratamento de erro
Dim FINAL_WORKSHEET As String
Dim ERROR_WORKSHEET As String
Dim ERROR_LINE_COL As String
Dim ERROR_MSG_COL As String
Dim WorkingXlSheet As String
Dim ErrorLine As Long

Dim LastColumn As Long
Dim LineColumn As Long
Dim ErrorColumn As Long

'Valor de meses de fidelidade default
Dim FIDEL_DEFAULT As Integer

'Valores de origem de planilha
Dim AQUISICAO_DEFAULT As String
Dim MIGRACAO_DEFAULT As String

'Mensagens de erro
Dim TV_PACK_ERROR As String
Dim ONLINE_CONT_ERROR As String
Dim SPEED_FMT_ERROR As String

'Constantes de cor
Dim Red As Long
Dim Orange As Long
Dim Yellow As Long
'Colunas de ordenação
'Dim sortColumns As Variant

Sub Initialize_Cols()
    'ESTRATEGIA_COL = 31
    CAMPANHA_COL = 29
    'RESUMO_COL = 28
    PLANO_OFERTA_COL = 28
    OFERTA_COL = 30
    PRECO_FX_COL = 9
    PRECO_TV_COL = 17
    'PRECO_SVA_COL = 30
    PRECO_BL_COL = 11
    PRECO_TOT_COL = 27
    MULTA_COL = 24
    VAL_MULTA_COL = 25
    'FIDELIDADE_COL = 135
    'BENEFICIO_TIPO_COL = 139
    'LAST_PROD_COL = 122
    'FIRST_PROD_COL = 62
    ONLINE_CONT_COL = 12
    PACOTE_TV_COL = 13
    VELOC_BL_COL = 10
    VC_COL = 6
    LD_COL = 7
    
    If ThisWorkbook.Sheets(1).Shapes("optBtnFidel").ControlFormat.Value = xlOn Then
'        WorkingXlSheet = "3PRes " & ThisWorkbook.Sheets(1).Shapes("optBtnFidel").ControlFormat.Caption
        WorkingXlSheet = ThisWorkbook.Sheets(1).Name
        PLANO_FIXO_COL = 3
        PRECO_TARGT_OFR_COL = 4
        PRE_SEL_CONT_ONLINE_COL = 12
        FRANQUIA_VCLD_COL = 13
        ALAVANCA_COL = 14
        PRECO_TOTAL_COL = 16
        PRECO_MVL_VOZ_COL = 17
        PRECO_MVL_DADOS_COL = 18
        PRECO_FIXO_FID_COL = 19
        PRECO_LD_CFIDEL_COL = 20
        PRECO_VC_CFIDEL_COL = 21
        PRECO_TV_CFIDEL_COL = 22
        PRECO_VX_SSVA_COL = 23
        PRECO_VX_CSVA_COL = 24
        PRECO_VX_SVA_FID_COL = 25
        CAMPANHA_VOZ_SLD_SVC_FIDEL_COL = 30
        CAMPANHA_VOZ_SLD_CVC_FIDEL_COL = 31
        CAMPANHA_VOZ_CLD_SVC_FIDEL_COL = 32
        CAMPANHA_VOZ_CLD_CVC_FIDEL_COL = 33
        OFERTA_VOZ_SLD_SVC_FIDEL_COL = 34
        OFERTA_VOZ_SLD_CVC_FIDEL_COL = 35
        OFERTA_VOZ_CLD_SVC_FIDEL_COL = 36
        OFERTA_VOZ_CLD_CVC_FIDEL_COL = 37
        BUNDLE_OFERTA_COL = 38
        MIN_VC_OFERTA_COL = 39
        MIN_LD_OFERTA_COL = 40
        MULTA_FID_COL = 41
        OPCAO_SVA_COL = 42
        OPCAO_SD_COL = 43
        TIPO_PRECO_COL = 46
        MESES_FIDEL_COL = 48
        VELOC_VX_COL = 11
        SELECAO_CONT_ONLINE_COL = 26
        PLANO_TV_DVR = 7
        PACK_TV_COL = 8
        OFERTA_DVR_COL = 44
        FIDEL_DEFAULT = 12
    ElseIf ThisWorkbook.Sheets(1).Shapes("optBtnNoFidel").ControlFormat.Value = xlOn Then
        'WorkingXlSheet = "3PRes " & ThisWorkbook.Sheets(1).optBtnNoFidel.Caption
        WorkingXlSheet = ThisWorkbook.Sheets(2).Name
        PLANO_FIXO_COL = 3
        PRECO_TARGT_OFR_COL = 4
        PRE_SEL_CONT_ONLINE_COL = 12
        FRANQUIA_VCLD_COL = 13
        ALAVANCA_COL = 15
        PRECO_TOTAL_COL = 17
        PRECO_MVL_VOZ_COL = 18
        PRECO_MVL_DADOS_COL = 19
        PRECO_FIXO_FID_COL = 20
        PRECO_LD_CFIDEL_COL = 21
        PRECO_VC_CFIDEL_COL = 22
        PRECO_TV_CFIDEL_COL = 23
        PRECO_VX_SSVA_COL = 24
        PRECO_VX_CSVA_COL = 25
        PRECO_VX_SVA_FID_COL = 26
        CAMPANHA_VOZ_SLD_SVC_FIDEL_COL = 31
        CAMPANHA_VOZ_SLD_CVC_FIDEL_COL = 32
        CAMPANHA_VOZ_CLD_SVC_FIDEL_COL = 33
        CAMPANHA_VOZ_CLD_CVC_FIDEL_COL = 34
        OFERTA_VOZ_SLD_SVC_FIDEL_COL = 35
        OFERTA_VOZ_SLD_CVC_FIDEL_COL = 36
        OFERTA_VOZ_CLD_SVC_FIDEL_COL = 37
        OFERTA_VOZ_CLD_CVC_FIDEL_COL = 38
        BUNDLE_OFERTA_COL = 39
        MIN_VC_OFERTA_COL = 40
        MIN_LD_OFERTA_COL = 41
        MULTA_FID_COL = 42
        OPCAO_SVA_COL = 43
        OPCAO_SD_COL = 44
        TIPO_PRECO_COL = 47
        MESES_FIDEL_COL = 48
        VELOC_VX_COL = 11
        SELECAO_CONT_ONLINE_COL = 27
        PLANO_TV_DVR = 7
        PACK_TV_COL = 8
        OFERTA_DVR_COL = 45
        FIDEL_DEFAULT = Empty
    End If
    
    INI_LINE_PROD = 5
    INI_LINE_RES = 5
    END_COL_RES = 48
    KEY_COL = END_COL_RES + 1
    
    FINAL_WORKSHEET = "DT_FINAL"
    ERROR_WORKSHEET = "Erro"
    ERROR_LINE_COL = "Linha"
    ERROR_MSG_COL = "Mensagem de Erro"
    ErrorLine = 5
    
    TV_PACK_ERROR = "Pacote de TV não previsto"
    ONLINE_CONT_ERROR = "Combinação de Conteúdo Online (Benefício BL) não prevista"
    SPEED_FMT_ERROR = "Formato ou valor de velocidade não previsto"
    
    AQUISICAO_DEFAULT = "Aquisicao"
    MIGRACAO_DEFAULT = "Migracao"
    
    Red = RGB(255, 0, 0)
    Yellow = RGB(255, 255, 0)
    Orange = RGB(255, 165, 0)
    
    If WorksheetExists(ERROR_WORKSHEET) Then
        ThisWorkbook.Sheets(ERROR_WORKSHEET).Delete
    End If
    
    'sortColumns = Array(VELOC_VX_COL, _
    '                    PRE_SEL_CONT_ONLINE_COL, _
    '                    FRANQUIA_VC_LD, _
    '                    PLANO_FIXO_COL, _
    '                    ALAVANCA_COL, _
    '                    PRECO_TOTAL_COL)
End Sub

Sub InsereErro(ByVal errorOrigin As Excel.Worksheet, _
               ByVal insertPoint As Excel.Worksheet, _
               Row As Long, _
               Optional column As Long, _
               Optional errorMessage As String, _
               Optional typeError As ErrorType = xlEtError)
    Dim xlWb As Excel.Worksheet
    Dim xlWbAfter As Excel.Worksheet
    
    If insertPoint Is Nothing Then
        Set xlWbAfter = ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count)
    Else
        Set xlWbAfter = insertPoint
    End If
    
    If Not WorksheetExists(ERROR_WORKSHEET) Then
        Set xlWb = ThisWorkbook.Sheets.Add(After:=xlWbAfter)
        xlWb.Name = ERROR_WORKSHEET
        With errorOrigin
            .Range(.Cells(1, 1), .Cells(4, 1)).EntireRow.Copy Destination:=xlWb.Cells(1, 1)
            LastColumn = .Cells(4, .Columns.Count).End(xlToLeft).column
        End With
        
        LineColumn = LastColumn + 1
        ErrorColumn = LineColumn + 1
        
        With xlWb
            .Range(.Cells(3, LastColumn), .Cells(4, LastColumn)).Copy
            .Range(.Cells(3, LineColumn), .Cells(4, ErrorColumn)).PasteSpecial xlPasteFormats
            .Cells(4, LineColumn).Value = ERROR_LINE_COL
            .Cells(4, ErrorColumn).Value = ERROR_MSG_COL
        End With
    Else
        Set xlWb = ThisWorkbook.Sheets(ERROR_WORKSHEET)
    End If

    With errorOrigin
        .Range(.Cells(Row, 1), .Cells(Row, LastColumn)).EntireRow.Copy Destination:=xlWb.Cells(ErrorLine, 1)
        .Activate
        If (Not IsEmpty(column)) And (column > 0) Then
            .Range(.Cells(Row, column), .Cells(Row, column)).Select
        Else
            .Range(.Cells(Row, 1), .Cells(Row, LastColumn)).EntireRow.Select
        End If
        
        If typeError = xlEtError Then
            Selection.Font.Bold = True
            Selection.Font.Color = Red
        ElseIf typeError = xlEtWarning Then
            Selection.Font.Italic = True
            Selection.Font.Color = Orange
        End If
    End With

    With xlWb
        If typeError = xlEtError Then
            .Cells(ErrorLine, LineColumn).Value = "Erro: "
        ElseIf typeError = xlEtWarning Then
            .Cells(ErrorLine, LineColumn).Value = "Alerta: "
        ElseIf typeError = xlEtInfo Then
            .Cells(ErrorLine, LineColumn).Value = "Info: "
        End If
        
        .Cells(ErrorLine, LineColumn).Value = .Cells(ErrorLine, LineColumn).Value & "Linha " & Row
        If (Not IsEmpty(column)) And (column > 0) Then
            .Cells(ErrorLine, LineColumn).Value = .Cells(ErrorLine, LineColumn).Value & ", Coluna: " & column
        End If
        .Cells(ErrorLine, ErrorColumn).Value = errorMessage
    End With
    
    ErrorLine = ErrorLine + 1
End Sub

Sub Conversor(ByVal prodWrkBook As Excel.Workbook)
    Dim campanha As String
    Dim oferta As String
    Dim plano As String
    Dim conteudoOnline As String
    Dim precoFX As Double
    Dim tipoPrecoBL As String
    Dim velocBL As String
    Dim precoBL As Double
    Dim precoTV As Double
    Dim precoTotal As Double
    Dim precoSVA As Double
    Dim multa As Double
    Dim mesesFidel As Integer
    Dim ld As String
    Dim vc As String
    Dim pacoteTVTemp As String
    Dim pacoteTV As String
    Dim haMulta As String
        
    Dim isLD As Boolean
    Dim isVC As Boolean
    Dim isDVR As Boolean
    Dim isSVA As Boolean
    Dim isFidel As Boolean
    
    Dim Row As Long
    
    Dim speedVerified As Boolean
    
    Dim thisApp As Excel.Application
    Dim dataSheet As Excel.Worksheet
    Dim updateSheet As Excel.Worksheet
    Dim newSheet As Excel.Worksheet
    Dim errorSheet As Excel.Worksheet
    
    Dim rnSource As Excel.Range
    Dim rnTarget As Excel.Range

    Initialize_Cols

    Set thisApp = prodWrkBook.Parent
    
    Set dataSheet = prodWrkBook.Sheets("Helena")
    Set updateSheet = ThisWorkbook.Sheets(WorkingXlSheet)
    Clean updateSheet
    
    Row = INI_LINE_PROD
    rowU = INI_LINE_RES
    
    estrategia = thisApp.InputBox(Prompt:="Arquivo de Migração ou Aquisição?", _
                                  Title:="Migração ou Aquisição", _
                                  Type:=2) 'String

    Do While (LCase(estrategia) <> "false" And _
              LCase(estrategia) <> "migração" And LCase(estrategia) <> "migracao" And _
              LCase(estrategia) <> "aquisição" And LCase(estrategia) <> "aquisicao")
        MsgBox "Invalid value: " & estrategia, vbExclamation, "Sorry!"
        estrategia = thisApp.InputBox(Prompt:="Arquivo de Migração ou Aquisição?", _
                                      Title:="Valores possíveis: Migração ou Aquisição", _
                                      Type:=2) 'String
    Loop
    
    If (LCase(estrategia) = "migração" Or LCase(estrategia) = "migracao") Then
        estrategia = MIGRACAO_DEFAULT
    ElseIf (LCase(estrategia) <> "aquisição" And LCase(estrategia) <> "aquisicao") Then
        estrategia = AQUISICAO_DEFAULT
    Else
        MsgBox "File Type Cancelled." & estrategia, vbExclamation, "Can't continue!"
        End
    End If

    mesesFidel = FIDEL_DEFAULT
    
    Do While Not (IsEmpty(dataSheet.Cells(Row, CAMPANHA_COL).Value))
        'busca os novos dados
        'estrategia = dataSheet.Cells(Row, ESTRATEGIA_COL).Value
        campanha = dataSheet.Cells(Row, CAMPANHA_COL).Value
        'resumo = dataSheet.Cells(Row, RESUMO_COL).Value
        plano = dataSheet.Cells(Row, PLANO_OFERTA_COL).Value
        oferta = dataSheet.Cells(Row, OFERTA_COL).Value
        precoFX = dataSheet.Cells(Row, PRECO_FX_COL).Value
        precoTV = dataSheet.Cells(Row, PRECO_TV_COL).Value
        'precoSVA = dataSheet.Cells(Row, PRECO_SVA_COL).Value
        precoBL = dataSheet.Cells(Row, PRECO_BL_COL).Value
        haMulta = dataSheet.Cells(Row, MULTA_COL).Value
        If IsNumeric(dataSheet.Cells(Row, VAL_MULTA_COL).Value) Then
            multa = dataSheet.Cells(Row, VAL_MULTA_COL).Value
        Else
            multa = 0
        End If
        precoTotal = dataSheet.Cells(Row, PRECO_TOT_COL).Value
        'mesesFidel = dataSheet.Cells(Row, FIDELIDADE_COL).Value
        conteudoOnline = dataSheet.Cells(Row, ONLINE_CONT_COL).Value
        pacoteTVTemp = dataSheet.Cells(Row, PACOTE_TV_COL).Value
        velocBL = dataSheet.Cells(Row, VELOC_BL_COL).Value

        If LCase(haMulta) = "sim" Then
            isFidel = True
        Else
            isFidel = False
        End If
        
        'de-para pacote TV
        If InStr(LCase(pacoteTVTemp), "start hd") > 0 Then
            pacoteTV = """" & "TV Start HD" & """"
        ElseIf InStr(LCase(pacoteTVTemp), "mix hd") > 0 Then
            pacoteTV = """" & "TV Mix HD" & """"
        ElseIf InStr(LCase(pacoteTVTemp), "mix hbo hd") > 0 Then
            pacoteTV = """" & "TV Mix HBOMAX HD" & """"
        ElseIf InStr(LCase(pacoteTVTemp), "mix telecine hd") > 0 Then
            pacoteTV = """" & "TV Mix Telecine HD" & """"
        ElseIf InStr(LCase(pacoteTVTemp), "mix cinema hd") > 0 Then
            pacoteTV = """" & "TV Mix Cinema HD" & """"
        ElseIf InStr(LCase(pacoteTVTemp), "total hbo hd") > 0 Then
            pacoteTV = """" & "TV Total HBOMAX HD" & """"
        ElseIf InStr(LCase(pacoteTVTemp), "total cinema hd") > 0 Then
            pacoteTV = """" & "TV Total Cinema HD" & """"
        ElseIf InStr(LCase(pacoteTVTemp), "total hd") > 0 Then
            pacoteTV = """" & "TV Total HD" & """"
        ElseIf InStr(LCase(pacoteTVTemp), "total telecine hd") > 0 Then
            pacoteTV = """" & "TV Total Telecine HD" & """"
        Else
            InsereErro dataSheet, updateSheet, Row, errorMessage:=TV_PACK_ERROR
            pacoteTV = Null
            GoTo ContinueReadLoop
        End If
        
        'DVR
        If InStr(UCase(pacoteTVTemp), "DVR") > 0 Then
            isDVR = True
        Else
            isDVR = False
        End If
        
        ld = dataSheet.Cells(Row, LD_COL).Value
        vc = dataSheet.Cells(Row, VC_COL).Value
        
        isLD = False
        isVC = False
         
        ldFound = InStr(UCase(ld), "SIM")
        vcFound = InStr(UCase(vc), "SIM")
         
        If ldFound > 0 Then
            isLD = True
        End If
         
        If vcFound > 0 Then
            isVC = True
        End If
         
        'Conteudo online
        If InStr(LCase(conteudoOnline), "hbo go, crackle, fox play, discovery kids play, espn play, noggin e coleção oi") > 0 Then
            updateSheet.Cells(rowU, SELECAO_CONT_ONLINE_COL).Value = """" & "Top" & """"
        ElseIf InStr(LCase(conteudoOnline), "crackle, fox play, discovery kids play, espn play, noggin e coleção oi") > 0 Then
            updateSheet.Cells(rowU, SELECAO_CONT_ONLINE_COL).Value = """" & "Intermediario" & """"
        ElseIf InStr(LCase(conteudoOnline), "noggin e coleção") > 0 Then
            updateSheet.Cells(rowU, SELECAO_CONT_ONLINE_COL).Value = """" & "Basico" & """"
        ElseIf InStr(LCase(conteudoOnline), "na") > 0 Then
            updateSheet.Cells(rowU, SELECAO_CONT_ONLINE_COL).Value = ""
        Else
            InsereErro dataSheet, updateSheet, Row, errorMessage:=ONLINE_CONT_ERROR
            GoTo ContinueReadLoop
        End If
         
        If InStr(LCase(velocBL), "300kb") > 0 Or _
           InStr(LCase(velocBL), "600kb") > 0 Or _
           InStr(LCase(velocBL), "1mb") > 0 Or _
           InStr(LCase(velocBL), "2mb") > 0 Then
            updateSheet.Cells(rowU, VELOC_VX_COL).Value = """VX Até 2mb"""
        ElseIf InStr(LCase(velocBL), "20mb") > 0 Or _
               InStr(LCase(velocBL), "25mb") > 0 Then
            updateSheet.Cells(rowU, VELOC_VX_COL).Value = """VX Até 25mb"""
        ElseIf InStr(LCase(velocBL), "30mb") > 0 Or _
               InStr(LCase(velocBL), "35mb") > 0 Then
            updateSheet.Cells(rowU, VELOC_VX_COL).Value = """VX 35mb"""
        ElseIf InStr(LCase(velocBL), "5mb") > 0 Or _
               InStr(LCase(velocBL), "10mb") > 0 Or _
               InStr(LCase(velocBL), "15mb") > 0 Then
            updateSheet.Cells(rowU, VELOC_VX_COL).Value = """VX Até 15mb"""
        ElseIf InStr(LCase(velocBL), "internet móvel substituta") > 0 Then
            updateSheet.Cells(rowU, VELOC_VX_COL).Value = """BLM 10gb"""
        Else
            InsereErro dataSheet, updateSheet, Row, errorMessage:=SPEED_FMT_ERROR
            GoTo ContinueReadLoop
        End If

        updateSheet.Cells(rowU, PLANO_FIXO_COL).Value = """" & "Fixo Ilimitado" & """"
        updateSheet.Cells(rowU, PRECO_TARGT_OFR_COL).Value = 99999
        updateSheet.Cells(rowU, PLANO_TV_DVR).Value = isDVR
        updateSheet.Cells(rowU, PACK_TV_COL).Value = pacoteTV
        updateSheet.Cells(rowU, ALAVANCA_COL).Value = """" & "RetencaoOT" & """"
        updateSheet.Cells(rowU, PRECO_TOTAL_COL).Value = precoTotal
        updateSheet.Cells(rowU, PRECO_FIXO_FID_COL).Value = precoFX
        updateSheet.Cells(rowU, PRECO_LD_CFIDEL_COL).Value = 0
        updateSheet.Cells(rowU, PRECO_VC_CFIDEL_COL).Value = 5
        updateSheet.Cells(rowU, PRECO_TV_CFIDEL_COL).Value = precoTV
        updateSheet.Cells(rowU, PRECO_VX_SSVA_COL).Value = precoBL
        updateSheet.Cells(rowU, PRECO_VX_CSVA_COL).Value = precoBL
        updateSheet.Cells(rowU, PRECO_VX_SVA_FID_COL).Value = 0
         
        If isFidel Then
            updateSheet.Cells(rowU, MULTA_FID_COL).Value = multa
            updateSheet.Cells(rowU, MESES_FIDEL_COL).Value = mesesFidel
        End If
        
        updateSheet.Cells(rowU, BUNDLE_OFERTA_COL).Value = """" & LCase(plano) & """"
        updateSheet.Cells(rowU, OPCAO_SVA_COL).Value = True
        updateSheet.Cells(rowU, OPCAO_SD_COL).Value = True
        updateSheet.Cells(rowU, OFERTA_DVR_COL).Value = isDVR
        updateSheet.Cells(rowU, TIPO_PRECO_COL).Value = """" & estrategia & """"

        If Not isLD And Not isVC Then
            updateSheet.Cells(rowU, CAMPANHA_VOZ_SLD_SVC_FIDEL_COL).Value = campanha
            updateSheet.Cells(rowU, OFERTA_VOZ_SLD_SVC_FIDEL_COL).Value = oferta
            updateSheet.Cells(rowU, MIN_VC_OFERTA_COL).Value = 0
            updateSheet.Cells(rowU, MIN_LD_OFERTA_COL).Value = 0
            updateSheet.Cells(rowU, FRANQUIA_VCLD_COL).Value = """" & "Sem Ilimitado" & """"
        End If
                
        If isLD And Not isVC Then
            updateSheet.Cells(rowU, CAMPANHA_VOZ_CLD_SVC_FIDEL_COL).Value = campanha
            updateSheet.Cells(rowU, OFERTA_VOZ_CLD_SVC_FIDEL_COL).Value = oferta
            updateSheet.Cells(rowU, MIN_VC_OFERTA_COL).Value = 0
            updateSheet.Cells(rowU, MIN_LD_OFERTA_COL).Value = 99999
            updateSheet.Cells(rowU, FRANQUIA_VCLD_COL).Value = """" & "LD Ilimitado" & """"
        End If
                
        If Not isLD And isVC Then
            updateSheet.Cells(rowU, CAMPANHA_VOZ_SLD_CVC_FIDEL_COL).Value = campanha
            updateSheet.Cells(rowU, OFERTA_VOZ_SLD_CVC_FIDEL_COL).Value = oferta
            updateSheet.Cells(rowU, MIN_VC_OFERTA_COL).Value = 99999
            updateSheet.Cells(rowU, MIN_LD_OFERTA_COL).Value = 0
            updateSheet.Cells(rowU, FRANQUIA_VCLD_COL).Value = """" & "VC Ilimitado" & """"
        End If
                
        If isLD And isVC Then
            updateSheet.Cells(rowU, CAMPANHA_VOZ_CLD_CVC_FIDEL_COL).Value = campanha
            updateSheet.Cells(rowU, OFERTA_VOZ_CLD_CVC_FIDEL_COL).Value = oferta
            updateSheet.Cells(rowU, MIN_VC_OFERTA_COL).Value = 99999
            updateSheet.Cells(rowU, MIN_LD_OFERTA_COL).Value = 99999
            updateSheet.Cells(rowU, FRANQUIA_VCLD_COL).Value = """" & "VC LD Ilimitado" & """"
        End If
                
        updateSheet.Cells(rowU, KEY_COL).Value = updateSheet.Cells(rowU, VELOC_VX_COL).Value & _
                                                 updateSheet.Cells(rowU, PLANO_TV_DVR).Value & _
                                                 updateSheet.Cells(rowU, PACK_TV_COL).Value & _
                                                 updateSheet.Cells(rowU, PRE_SEL_CONT_ONLINE_COL).Value & _
                                                 updateSheet.Cells(rowU, FRANQUIA_VCLD_COL).Value & _
                                                 updateSheet.Cells(rowU, PLANO_FIXO_COL).Value & _
                                                 updateSheet.Cells(rowU, ALAVANCA_COL).Value
                                                 
        'Duplicação de linha, segundo regra FranquiaVCLD
        With updateSheet
            .Range(.Cells(rowU, 1), .Cells(rowU, KEY_COL)).EntireRow.Copy Destination:=.Cells(rowU + 1, 1)

            'Sem Ilimitado -> LD ilimitado
            If (Not isLD) And (Not isVC) Then
                .Cells(rowU + 1, FRANQUIA_VCLD_COL).Value = """" & "LD Ilimitado" & """"
                .Cells(rowU + 1, CAMPANHA_VOZ_SLD_SVC_FIDEL_COL).Value = Empty
                .Cells(rowU + 1, OFERTA_VOZ_SLD_SVC_FIDEL_COL).Value = Empty
                .Cells(rowU + 1, CAMPANHA_VOZ_CLD_SVC_FIDEL_COL).Value = campanha
                .Cells(rowU + 1, OFERTA_VOZ_CLD_SVC_FIDEL_COL).Value = oferta
                .Cells(rowU + 1, MIN_VC_OFERTA_COL).Value = 0
                .Cells(rowU + 1, MIN_LD_OFERTA_COL).Value = 99999
            End If

            'LD Ilimitado -> Sem ilimitado
            If isLD And (Not isVC) Then
                .Cells(rowU + 1, FRANQUIA_VCLD_COL).Value = """" & "Sem Ilimitado" & """"
                .Cells(rowU + 1, CAMPANHA_VOZ_CLD_SVC_FIDEL_COL).Value = Empty
                .Cells(rowU + 1, OFERTA_VOZ_CLD_SVC_FIDEL_COL).Value = Empty
                .Cells(rowU + 1, CAMPANHA_VOZ_SLD_SVC_FIDEL_COL).Value = campanha
                .Cells(rowU + 1, OFERTA_VOZ_SLD_SVC_FIDEL_COL).Value = oferta
                .Cells(rowU + 1, MIN_VC_OFERTA_COL).Value = 0
                .Cells(rowU + 1, MIN_LD_OFERTA_COL).Value = 0
            End If

            'VC Ilimitado -> VC LD Ilimitado
            If (Not isLD) And isVC Then
                .Cells(rowU + 1, FRANQUIA_VCLD_COL).Value = """" & "VC LD Ilimitado" & """"
                .Cells(rowU + 1, CAMPANHA_VOZ_SLD_CVC_FIDEL_COL).Value = Empty
                .Cells(rowU + 1, OFERTA_VOZ_SLD_CVC_FIDEL_COL).Value = Empty
                .Cells(rowU + 1, CAMPANHA_VOZ_CLD_CVC_FIDEL_COL).Value = campanha
                .Cells(rowU + 1, OFERTA_VOZ_CLD_CVC_FIDEL_COL).Value = oferta
                .Cells(rowU + 1, MIN_VC_OFERTA_COL).Value = 99999
                .Cells(rowU + 1, MIN_LD_OFERTA_COL).Value = 99999
            End If
                
            'VC LD Ilimitado -> VC Ilimitado
            If isLD And isVC Then
                .Cells(rowU + 1, FRANQUIA_VCLD_COL).Value = """" & "VC Ilimitado" & """"
                .Cells(rowU + 1, CAMPANHA_VOZ_CLD_CVC_FIDEL_COL).Value = Empty
                .Cells(rowU + 1, OFERTA_VOZ_CLD_CVC_FIDEL_COL).Value = Empty
                .Cells(rowU + 1, CAMPANHA_VOZ_SLD_CVC_FIDEL_COL).Value = campanha
                .Cells(rowU + 1, OFERTA_VOZ_SLD_CVC_FIDEL_COL).Value = oferta
                .Cells(rowU + 1, MIN_VC_OFERTA_COL).Value = 99999
                .Cells(rowU + 1, MIN_LD_OFERTA_COL).Value = 0
            End If
                
            .Cells(rowU + 1, KEY_COL).Value = .Cells(rowU + 1, VELOC_VX_COL).Value & _
                                              .Cells(rowU + 1, PLANO_TV_DVR).Value & _
                                              .Cells(rowU + 1, PACK_TV_COL).Value & _
                                              .Cells(rowU + 1, PRE_SEL_CONT_ONLINE_COL).Value & _
                                              .Cells(rowU + 1, FRANQUIA_VCLD_COL).Value & _
                                              .Cells(rowU + 1, PLANO_FIXO_COL).Value & _
                                              .Cells(rowU + 1, ALAVANCA_COL).Value
        End With
        'rowU = rowU + 1
        rowU = rowU + 2
        
ContinueReadLoop:
        Row = Row + 1
    Loop
    
    'With ThisWorkbook
    '    Set newSheet = .Sheets.Add(After:=.Sheets(.Sheets.Count))
    '    newSheet.Name = "DT_TO_UPDATE"
    'End With
    'rnTarget = newSheet.Range(INI_LINE_RES, 1)
    
    'Remove duplicidade do resultado final
    With updateSheet
        'Concatenação da chave, porque RemoveDuplicates só permite Arrays de 2 posições no máximo.
'        .Cells(INI_LINE_RES, KEY_COL).FillDown
        Set rnSource = .Range(.Cells(INI_LINE_RES, 1), .Cells(rowU - 1, KEY_COL))
        rnSource.Sort key1:=.Range(.Cells(INI_LINE_RES, KEY_COL), .Cells(rowU - 1, KEY_COL)), _
                      key2:=.Range(.Cells(INI_LINE_RES, PRECO_TOTAL_COL), .Cells(rowU - 1, PRECO_TOTAL_COL))
        rnSource.RemoveDuplicates Columns:=Array(KEY_COL, PRECO_TOTAL_COL), Header:=xlNo
        .Columns(KEY_COL).EntireColumn.Hidden = True
    End With
    
    'Use AdvancedFilter to copy the data from the source to the target,
    'while filtering for duplicate values.
    'With updateSheet
    '    rnSource = .Range(.Cells(INI_LINE_RES, 1), .Cells(rowU - 1, END_COL_RES))
    '    rnSource.AdvancedFilter Action:=xlFilterCopy, CopyToRange:=rnTarget, Unique:=True
    'End With
    'WrkBookAvg updateSheet
End Sub

Private Sub Clean(Optional xlSheet As Excel.Worksheet)
    Dim rowI As Long
    Dim rowL As Long
    
    Dim dataSheet As Excel.Worksheet
    
    If xlSheet Is Nothing Then
        Set dataSheet = ThisWorkbook.Sheets(1)
    ElseIf WorksheetExists(xlSheet.Name) Then
        Set dataSheet = xlSheet
    Else
        Set dataSheet = ThisWorkbook.Sheets(1)
    End If
    
    With dataSheet
        rowI = INI_LINE_RES
        rowL = .Cells(.Rows.Count, PLANO_FIXO_COL).End(xlUp).Row

        If rowI <= rowL Then
            .Range(.Cells(rowI, 1), .Cells(rowL + 1, KEY_COL)).ClearContents
        End If
    End With
End Sub

Private Sub WrkBookAvg(Optional xlSheet As Excel.Worksheet)
    Dim Row As Long
    
    Dim dataSheet As Excel.Worksheet
    
    If xlSheet Is Nothing Then
        Set dataSheet = ThisWorkbook.Sheets(WorkingXlSheet)
    ElseIf WorksheetExists(xlSheet.Name) Then
        Set dataSheet = xlSheet
    Else
        Set dataSheet = ThisWorkbook.Sheets(WorkingXlSheet)
    End If
        
    Row = INI_LINE_RES
    
    Do While Not (IsEmpty(dataSheet.Cells(Row, KEY_COL).Value))
        If dataSheet.Cells(Row, KEY_COL).Value = dataSheet.Cells(Row + 1, KEY_COL).Value Then
            dataSheet.Cells(Row, PRECO_TARGT_OFR_COL).Value = _
            (dataSheet.Cells(Row, PRECO_TOTAL_COL).Value + _
             dataSheet.Cells(Row + 1, PRECO_TOTAL_COL).Value) / 2
        End If

        Row = Row + 1
    Loop
End Sub

Function WorksheetExists(sheetName As String, Optional wb As Excel.Workbook)
    Dim s As Excel.Worksheet
    
    If wb Is Nothing Then Set wb = ThisWorkbook
    
    On Error Resume Next
    Set s = wb.Sheets(sheetName)
    If Err.Number > 0 Then
        WorksheetExists = False
    Else
        WorksheetExists = True
    End If
    On Error GoTo 0
End Function

Sub BtnImport_Click()
    Dim strFileToOpen As String
    Dim newFile As String
    Dim currentFile As String
    
    Dim actBook As Excel.Workbook
    Dim prodWrkBook As Excel.Workbook
    
    Application.ScreenUpdating = False
    
    currentFile = ThisWorkbook.FullName
    
    strFileToOpen = Application.GetOpenFilename(Title:="Please choose a file to open", _
                                                fileFilter:="Excel Files *.xls* (*.xls*),")

    If strFileToOpen = "False" Or strFileToOpen = "" Then
        MsgBox "No file selected.", vbExclamation, "Sorry!"
        Exit Sub
    End If
        
    Set prodWrkBook = Workbooks.Open(Filename:=strFileToOpen)
    
    Conversor prodWrkBook
    
    newFile = Application.GetSaveAsFilename(InitialFileName:=NewFileName, _
                                            fileFilter:="Excel Files *.xls* (*.xls*),")
                                            
    If newFile <> "" And newFile <> "False" Then
        If InStr(LCase(newFile), ".xls") <= 0 Then
            newFile = Trim(newFile) & "xlsx"
        End If

        If InStr(LCase(newFile), ".") <= 0 Then
            newFile = Trim(newFile) & ".xlsx"
        End If

        If WorksheetExists(sheetName:=FINAL_WORKSHEET, wb:=prodWrkBook) Then
            prodWrkBook.Sheets(FINAL_WORKSHEET).Delete
        End If
        
        ThisWorkbook.Sheets(WorkingXlSheet).Copy After:=prodWrkBook.Sheets(prodWrkBook.Sheets.Count)
        With prodWrkBook.Sheets(prodWrkBook.Sheets.Count)
            .DrawingObjects.Delete
            .Range(.Cells(1, 1), .Cells(2, 1)).EntireRow.Delete
            .Name = FINAL_WORKSHEET
        End With
        
        If WorksheetExists(ERROR_WORKSHEET) Then
            If WorksheetExists(sheetName:=ERROR_WORKSHEET, wb:=prodWrkBook) Then
                prodWrkBook.Sheets(ERROR_WORKSHEET).Delete
            End If
            ThisWorkbook.Sheets(ERROR_WORKSHEET).Copy After:=prodWrkBook.Sheets(prodWrkBook.Sheets.Count)
        End If

        prodWrkBook.SaveAs Filename:=newFile, _
                            FileFormat:=xlOpenXMLWorkbook, _
                            CreateBackup:=False

        Set actBook = ActiveWorkbook
        Workbooks.Open currentFile
        actBook.Close
    End If
    
    Application.ScreenUpdating = True
End Sub
